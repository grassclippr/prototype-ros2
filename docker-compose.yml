services:
  core:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: core
    networks:
      - micro_ros_net
    command: ["ros2", "launch", "rover_description", "robot_control.launch.py"]
    volumes:
      - ./rover:/root/ros2_ws/src/rover

  # --- Proxy setup ---
  microros_proxy:
    build:
      context: .
      dockerfile: docker/Dockerfile.proxy
    container_name: microros_proxy
    networks:
      - micro_ros_net
    environment:
      - SERIAL_DEV=${SERIAL_DEV:-/dev/ttyACM0}
      - PROXY_PORT=${PROXY_PORT:-8888}
      - BAUDRATE=${BAUDRATE:-115200}
        #devices:
        #- ${SERIAL_DEV:-/dev/ttyACM0}:${SERIAL_DEV:-/dev/ttyACM0}
    volumes:
      - ./microros_proxy.py:/app/microros_proxy.py
    # Internal only: do not expose port externally
    command: ["python3", "/app/microros_proxy.py", "${SERIAL_DEV:-/dev/ttyACM0}", "${PROXY_PORT:-8888}", "${BAUDRATE:-115200}"]
    # Uncomment the next line to disable the proxy (and use direct serial instead)
    # deploy:
    #   replicas: 0

  # --- micro-ROS Agent (Proxy mode) ---
  micro_ros_agent:
    image: microros/micro-ros-agent:jazzy
    container_name: micro_ros_agent
    networks:
      - micro_ros_net
    environment:
      - PROXY_PORT=${PROXY_PORT:-8888}
    # To use the proxy, connect to TCP port (parametrized):
    command: ["tcp4", "--port", "${PROXY_PORT:-8888}", "-v6"]
    depends_on:
      - microros_proxy
    ports:
      - 8888:8888
    # To use direct serial instead, comment the above command and uncomment below:
    # command: ["serial", "--dev", "${SERIAL_DEV:-/dev/ttyACM0}"]
    # devices:
    #   - ${SERIAL_DEV:-/dev/ttyACM0}:${SERIAL_DEV:-/dev/ttyACM0}

networks:
  micro_ros_net:
    driver: bridge
